set nu
" use visual bell instead of beeping
set vb

" incremental search
set incsearch

" syntax highlighting
set bg=light
syntax on

"Vundle
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo

" Plugin 'tpope/vim-fugitive'

" plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" Git plugin not hosted on GitHub
" Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
"Plugin 'file:///home/gmarik/path/to/plugin'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
" Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
" Plugin 'ascenator/L9', {'name': 'newL9'}

" All of your Plugins must be added before the following line
call vundle#end()            " required
"filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
filetype plugin on


" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line


filetype on
" Tip #80
" open files to the previous line number  
set viminfo='10,\"100,:20,%,n~/.viminfo
au BufReadPost * if line("'\"") > 0|if line("'\"") <= line("$")|exe("norm '\"")|else|exe "norm $"|endif|endif 

" vtreeExplorer options
let treeExplVertical=1
let treeExplWinSize=25
let treeExplNoList=1

set tw=80
set mouse=a

" appearance
set t_Co=256
"helptags ~/.vim/doc

" Fugitive info in statusline
set laststatus=2
set statusline=%<%f\ %h%m%r%=%-14.(%l,%c%V%)\ %P

" Open the file whose name is below the cursor
" like bn but doesnt mind if the file does not exist
" nf for 'new file'
map nf <esc>:edit <cfile><cr>

" Move in the buffers with Ctrl + left or right for previous and next buffers.
map <C-left> <esc>:bp<cr>
map <C-right> <esc>:bn<cr>

" Markers
sign define marker text=▸▸ texthl=Search 
" add a sign with sa for 'sign add'
map sa :exe ":sign place 1 line=" . line(".") . " name=marker file=" .  expand("%:p")<cr>
" remove the sign on the current line with sign del
map sd :sign unplace<cr>
" jumping to the first marker in the current file
" sj for 'sign jump'
map sj :exe "sign jump 1 file=".expand("%:p")<cr>

" load a template if any exists for the extension of the file opened
autocmd BufNewFile * silent! 0r ~/.vim/templates/%:e.tpl

" highlight placeholders in templates with the Todo group
match Todo /<+.\++>/

" jump to placeholders in templates
nnoremap <C-j> /<+.\{-1,}+><cr>c/+>/e<cr>
inoremap <C-j> <esc>/<+.\{-1,}+><cr>c/+>/e<cr>

" any *.t file is a perl script
autocmd BufNewFile,BufRead *.t set ft=perl 
autocmd BufNewFile,BufRead *.tt set ft=php

" load perl specific settings
"autocmd FileType perl source ~/.vim/ftplugin/perl.vim

" list all buffers with bl (buffer list)
map bl :buffers<cr>

" reload current file with rl (reload)
map rl :source %<cr>

" paste toggle
set pastetoggle=<F2>

Plugin 'lifepillar/vim-solarized8'

" auto-indent
set autoindent
set smartindent

" default tabulation rules
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab

colorscheme solarized8_flat
set background=dark

set nu
" use visual bell instead of beeping
set vb

" incremental search
set incsearch

" syntax highlighting
set bg=light
syntax on

" auto-indent
set autoindent
set smartindent

" default tabulation rules
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab

" Tip #80
" open files to the previous line number  
set viminfo='10,\"100,:20,%,n~/.viminfo
au BufReadPost * if line("'\"") > 0|if line("'\"") <= line("$")|exe("norm '\"")|else|exe "norm $"|endif|endif 

" vtreeExplorer options
let treeExplVertical=1
let treeExplWinSize=25
let treeExplNoList=1

set tw=80

set mouse=a

" appearance
set t_Co=256
colorscheme jellybeans
helptags ~/.vim/doc

" Fugitive info in statusline
set laststatus=2
set statusline=%<%f\ %h%m%r%{fugitive#statusline()}%=%-14.(%l,%c%V%)\ %P

" Open the file whose name is below the cursor
" like bn but doesnt mind if the file does not exist
" nf for 'new file'
map nf <esc>:edit <cfile><cr>

" Move in the buffers with Ctrl + left or right for previous and next buffers.
map <C-left> <esc>:bp<cr>
map <C-right> <esc>:bn<cr>

" Markers
sign define marker text=▸▸ texthl=Search 
" add a sign with sa for 'sign add'
map sa :exe ":sign place 1 line=" . line(".") . " name=marker file=" .  expand("%:p")<cr>
" remove the sign on the current line with sign del
map sd :sign unplace<cr>
" jumping to the first marker in the current file
" sj for 'sign jump'
map sj :exe "sign jump 1 file=".expand("%:p")<cr>

" load a template if any exists for the extension of the file opened
autocmd BufNewFile * silent! 0r ~/.vim/templates/%:e.tpl

" highlight placeholders in templates with the Todo group
match Todo /<+.\++>/

" jump to placeholders in templates
nnoremap <C-j> /<+.\{-1,}+><cr>c/+>/e<cr>
inoremap <C-j> <esc>/<+.\{-1,}+><cr>c/+>/e<cr>

" any *.t file is a perl script
autocmd BufNewFile,BufRead *.t set ft=perl 

" load perl specific settings
autocmd FileType perl source ~/.vim/ftplugin/perl.vim

" list all buffers with bl (buffer list)
map bl :buffers<cr>

" reload current file with rl (reload)
map rl :source %<cr>

" paste toggle
set pastetoggle=<F2>

